// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfAppFinanse.Data;

#nullable disable

namespace WpfAppFinanse.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20240422202327_AddCurrencyIdToTransaction")]
    partial class AddCurrencyIdToTransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("WpfAppFinanse.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f987b28e-2058-4771-a465-07e97607e0b2"),
                            Code = "UAH",
                            Name = "Гривна"
                        },
                        new
                        {
                            Id = new Guid("3d568bc6-d4d0-456e-ae93-aa2195e0665f"),
                            Code = "USD",
                            Name = "Доллар США"
                        },
                        new
                        {
                            Id = new Guid("755516e5-007f-4293-8d11-942ce1f42e59"),
                            Code = "EUR",
                            Name = "Евро"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.ExpenseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExpenseTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9ab033e-1b5e-48fa-9874-2a3f6447ebeb"),
                            Name = "Продукты"
                        },
                        new
                        {
                            Id = new Guid("07242924-a4df-4458-88e4-5ac394f8b6f9"),
                            Name = "Транспортные расходы"
                        },
                        new
                        {
                            Id = new Guid("3d3ee1fd-325f-4dd6-8f54-1ad040657cb9"),
                            Name = "Коммунальные расходы"
                        },
                        new
                        {
                            Id = new Guid("a1647d93-0859-4632-9c9a-ca66e8ebcaf2"),
                            Name = "Покупка одежды"
                        },
                        new
                        {
                            Id = new Guid("3fad1306-b14f-4546-b065-feccdaef9397"),
                            Name = "Развлечения"
                        },
                        new
                        {
                            Id = new Guid("339bcad4-1d31-4361-8c93-1cea973cb369"),
                            Name = "Ремонт"
                        },
                        new
                        {
                            Id = new Guid("855e502d-d827-4c52-9d95-5ba6ca9ecdd6"),
                            Name = "Хозяйственные расходы"
                        },
                        new
                        {
                            Id = new Guid("48e77f09-3b5a-4e0c-bf43-bfbd23035e02"),
                            Name = "Косметологические услуги"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.IncomeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IncomeTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0569aa6e-4b8f-46d9-ae11-0d328269ad51"),
                            Name = "Зарплата"
                        },
                        new
                        {
                            Id = new Guid("fdd4ef98-fc77-499b-9c7f-f6977933425c"),
                            Name = "Премия"
                        },
                        new
                        {
                            Id = new Guid("6572f78a-ee06-4bfd-b4c6-3652943e4db7"),
                            Name = "Доход от сдачи в аренду"
                        },
                        new
                        {
                            Id = new Guid("d77b2450-f6d3-43e5-8413-0ac9b412ce3c"),
                            Name = "Подарок"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fbc6e229-ee4d-4248-bb45-20b53d3c6d7b"),
                            Balance = 1000m,
                            CurrencyId = new Guid("f987b28e-2058-4771-a465-07e97607e0b2"),
                            Name = "Основной кошелек"
                        },
                        new
                        {
                            Id = new Guid("ca4fe26e-7727-4abc-8f4c-67e273893bac"),
                            Balance = 500m,
                            CurrencyId = new Guid("3d568bc6-d4d0-456e-ae93-aa2195e0665f"),
                            Name = "Сбережения в долларах"
                        },
                        new
                        {
                            Id = new Guid("c98f7bfe-8180-41c7-8193-2945e3f00b8e"),
                            Balance = 500m,
                            CurrencyId = new Guid("755516e5-007f-4293-8d11-942ce1f42e59"),
                            Name = "Сбережения в евро"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Transaction", b =>
                {
                    b.HasOne("WpfAppFinanse.Models.Wallet", null)
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfAppFinanse.Models.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Wallet", b =>
                {
                    b.HasOne("WpfAppFinanse.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
