// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfAppFinanse.Data;

#nullable disable

namespace WpfAppFinanse.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20240423114244_AddWalletNavigationProperty")]
    partial class AddWalletNavigationProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("WpfAppFinanse.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d60b564c-2045-42e2-b04f-ef1197a38c2b"),
                            Code = "UAH",
                            Name = "Гривна"
                        },
                        new
                        {
                            Id = new Guid("6c3149ca-0241-4bfc-ae2d-4e977c9e38ca"),
                            Code = "USD",
                            Name = "Доллар США"
                        },
                        new
                        {
                            Id = new Guid("cba910d2-5583-4584-b5ff-9d86b42c96d6"),
                            Code = "EUR",
                            Name = "Евро"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.ExpenseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExpenseTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d91795d-3765-4ea9-a2e4-0aba29d71290"),
                            Name = "Продукты"
                        },
                        new
                        {
                            Id = new Guid("18b851c6-965f-4e44-9cc6-121bc1b67fc5"),
                            Name = "Транспортные расходы"
                        },
                        new
                        {
                            Id = new Guid("5130d631-21a1-47bb-8b33-e16f365c2903"),
                            Name = "Коммунальные расходы"
                        },
                        new
                        {
                            Id = new Guid("afec554d-376b-4f18-85ad-00a6037e6dbb"),
                            Name = "Покупка одежды"
                        },
                        new
                        {
                            Id = new Guid("338e3528-e08b-44a1-adba-0b0219f4585e"),
                            Name = "Развлечения"
                        },
                        new
                        {
                            Id = new Guid("713d05dd-c506-4b45-afd3-08639c567457"),
                            Name = "Ремонт"
                        },
                        new
                        {
                            Id = new Guid("55355db4-2603-4152-8eb4-5947fc8d0ab8"),
                            Name = "Хозяйственные расходы"
                        },
                        new
                        {
                            Id = new Guid("c38a9160-d2dc-484c-98f9-67cd453db2c3"),
                            Name = "Косметологические услуги"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.IncomeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IncomeTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df97e169-f0d1-4d63-bf63-c6ce6c7e445f"),
                            Name = "Зарплата"
                        },
                        new
                        {
                            Id = new Guid("fbf99a2d-fd3a-43a0-9c6a-6c0b8d18dbe4"),
                            Name = "Премия"
                        },
                        new
                        {
                            Id = new Guid("c3d00078-f5ff-4e1d-8828-9edef21a0ac6"),
                            Name = "Доход от сдачи в аренду"
                        },
                        new
                        {
                            Id = new Guid("7a69b145-5a55-436b-9dc6-64ee2c86069b"),
                            Name = "Подарок"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bf3da47-32ad-4165-af07-c7529ea07591"),
                            Balance = 1000m,
                            CurrencyId = new Guid("d60b564c-2045-42e2-b04f-ef1197a38c2b"),
                            Name = "Основной кошелек"
                        },
                        new
                        {
                            Id = new Guid("fd1f9c32-0c9a-477f-95a3-ced11224ae3c"),
                            Balance = 500m,
                            CurrencyId = new Guid("6c3149ca-0241-4bfc-ae2d-4e977c9e38ca"),
                            Name = "Сбережения в долларах"
                        },
                        new
                        {
                            Id = new Guid("2e8d2651-1b1c-4239-8163-bbfba86d28d1"),
                            Balance = 500m,
                            CurrencyId = new Guid("cba910d2-5583-4584-b5ff-9d86b42c96d6"),
                            Name = "Сбережения в евро"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Transaction", b =>
                {
                    b.HasOne("WpfAppFinanse.Models.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfAppFinanse.Models.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Wallet", b =>
                {
                    b.HasOne("WpfAppFinanse.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
