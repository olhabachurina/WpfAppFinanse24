// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfAppFinanse.Data;

#nullable disable

namespace WpfAppFinanse.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20240423114614_StructuralChangesToWallets")]
    partial class StructuralChangesToWallets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("WpfAppFinanse.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("63b5776e-0a4d-4b63-b05b-71142d0c3f6f"),
                            Code = "UAH",
                            Name = "Гривна"
                        },
                        new
                        {
                            Id = new Guid("a8f8d164-9c4a-4ccc-b01e-ac749362360e"),
                            Code = "USD",
                            Name = "Доллар США"
                        },
                        new
                        {
                            Id = new Guid("fe676197-6a55-4f85-81f2-82e221d1dd7d"),
                            Code = "EUR",
                            Name = "Евро"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.ExpenseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExpenseTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("239517eb-81d4-46ba-a820-27473a95bfff"),
                            Name = "Продукты"
                        },
                        new
                        {
                            Id = new Guid("8cea737f-4fac-428f-ae98-e8b2ea9057cf"),
                            Name = "Транспортные расходы"
                        },
                        new
                        {
                            Id = new Guid("62d38b74-2a34-4098-8d2c-81642f69b951"),
                            Name = "Коммунальные расходы"
                        },
                        new
                        {
                            Id = new Guid("30185235-2f3c-4c42-89bc-2697f4433935"),
                            Name = "Покупка одежды"
                        },
                        new
                        {
                            Id = new Guid("0f31c16f-bebb-4793-a9a3-34932c176ed8"),
                            Name = "Развлечения"
                        },
                        new
                        {
                            Id = new Guid("b04ae513-caf8-4016-8323-1df3aa73d762"),
                            Name = "Ремонт"
                        },
                        new
                        {
                            Id = new Guid("e56e33b0-8cc5-4cb9-8d36-155304cbbc37"),
                            Name = "Хозяйственные расходы"
                        },
                        new
                        {
                            Id = new Guid("cfe4d61e-b5cd-4ce4-9e9f-040bc5e7de30"),
                            Name = "Косметологические услуги"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.IncomeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IncomeTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30ae08be-17f3-488e-b22b-8b584c65eee9"),
                            Name = "Зарплата"
                        },
                        new
                        {
                            Id = new Guid("92a21ef3-b61b-45f3-bb95-4d5d0ddd7c73"),
                            Name = "Премия"
                        },
                        new
                        {
                            Id = new Guid("df0309db-db47-4c30-865d-99a39130193a"),
                            Name = "Доход от сдачи в аренду"
                        },
                        new
                        {
                            Id = new Guid("40c18011-65ac-499b-9629-d83c2a29cf2c"),
                            Name = "Подарок"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc0dea41-8151-420d-bfbe-c316d2e59808"),
                            Balance = 1000m,
                            CurrencyId = new Guid("63b5776e-0a4d-4b63-b05b-71142d0c3f6f"),
                            Name = "Основной кошелек"
                        },
                        new
                        {
                            Id = new Guid("2d29d2c2-7c0e-4df5-8252-e664ca9192bf"),
                            Balance = 500m,
                            CurrencyId = new Guid("a8f8d164-9c4a-4ccc-b01e-ac749362360e"),
                            Name = "Сбережения в долларах"
                        },
                        new
                        {
                            Id = new Guid("e8cda700-4b85-469b-878f-5bdc69f8d6f1"),
                            Balance = 500m,
                            CurrencyId = new Guid("fe676197-6a55-4f85-81f2-82e221d1dd7d"),
                            Name = "Сбережения в евро"
                        });
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Transaction", b =>
                {
                    b.HasOne("WpfAppFinanse.Models.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfAppFinanse.Models.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Wallet", b =>
                {
                    b.HasOne("WpfAppFinanse.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("WpfAppFinanse.Models.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
